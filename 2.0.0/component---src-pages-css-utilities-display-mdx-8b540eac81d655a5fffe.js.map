{"version":3,"sources":["webpack:///./src/pages/css-utilities/display.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","codeText","inline","inlineBlock","block","flex","flexInline","hidden","table","className","width","colSpan","responsive","isMDXComponent"],"mappings":"gaAiBaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,WADR,WAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,0FACA,gNACA,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,UADR,UAGA,iCAAc,4BAAYC,WAAW,KAAvB,cACd,cAAC,IAAD,CAAUC,SAAUC,IAAQH,QAAQ,aACpC,mBAAQ,CACN,GAAM,gBADR,gBAGA,iCAAc,4BAAYC,WAAW,KAAvB,mBACd,cAAC,IAAD,CAAUC,SAAUE,IAAaJ,QAAQ,aACzC,mBAAQ,CACN,GAAM,SADR,SAGA,iCAAc,4BAAYC,WAAW,KAAvB,aACd,cAAC,IAAD,CAAUC,SAAUG,IAAOL,QAAQ,aACnC,mBAAQ,CACN,GAAM,QADR,QAGA,iCAAc,4BAAYC,WAAW,KAAvB,WAAd,6BACA,cAAC,IAAD,CAAUC,SAAUI,IAAMN,QAAQ,aAClC,mBAAQ,CACN,GAAM,eADR,eAGA,iCAAc,4BAAYC,WAAW,KAAvB,kBACd,cAAC,IAAD,CAAUC,SAAUK,IAAYP,QAAQ,aACxC,mBAAQ,CACN,GAAM,UADR,UAGA,iCAAc,4BAAYC,WAAW,KAAvB,aAAd,2GACA,cAAC,IAAD,CAAUC,SAAUM,IAAQR,QAAQ,aACpC,mBAAQ,CACN,GAAM,SADR,SAGA,mCAAgB,4BAAYC,WAAW,KAAvB,YAAhB,KAA0E,4BAAYA,WAAW,KAAvB,eAA1E,KAAuI,4BAAYA,WAAW,KAAvB,gBAAvI,0CACA,cAAC,IAAD,CAAUC,SAAUO,IAAOT,QAAQ,aACnC,mBAAQ,CACN,GAAM,sBADR,sBAGA,uBAAOU,UAAU,uEACnB,2BACE,wBACE,oBAAIC,MAAM,OAAV,eACA,mCAGJ,2BACE,wBACE,oBAAIC,QAAQ,IAAIF,UAAU,wBACxB,yCAGJ,wBACE,yCACA,wBAAI,yCAEN,wBACE,6CACA,wBAAI,wDAEN,wBACE,6CACA,wBAAI,wDAEN,wBACE,6CACA,wBAAI,wDAEN,wBACE,6CACA,wBAAI,4CAEN,wBACE,oBAAIE,QAAQ,IAAIF,UAAU,wBACxB,0CAGJ,wBACE,0CACA,wBAAI,wCAEN,wBACE,8CACA,wBAAI,kEAEN,wBACE,8CACA,wBAAI,kEAEN,wBACE,8CACA,wBAAI,kEAEN,wBACE,8CACA,wBAAI,uDA9GD,wCAmHL,cAAC,IAAD,CAAUR,SAAUW,IAAYb,QAAQ,cAK5CH,EAAWiB,gBAAiB","file":"component---src-pages-css-utilities-display-mdx-8b540eac81d655a5fffe.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport CodeView from 'src/components/CodeView';\nimport inline from 'src/examples/CSS/Display/inline';\nimport inlineBlock from 'src/examples/CSS/Display/inlineBlock';\nimport block from 'src/examples/CSS/Display/block';\nimport flex from 'src/examples/CSS/Display/flex';\nimport flexInline from 'src/examples/CSS/Display/flexInline';\nimport hidden from 'src/examples/CSS/Display/hidden';\nimport table from 'src/examples/CSS/Display/table';\nimport responsive from 'src/examples/CSS/Display/responsive';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"display\"\n    }}>{`Display`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`The default display value for most elements is block or inline.`}</p>\n    <p>{`A block-level element always starts on a new line and takes up the full width available. An inline element does not start on a new line and only takes up as much width as necessary.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"inline\"\n    }}>{`Inline`}</h3>\n    <p>{`Class: `}<inlineCode parentName=\"p\">{`.u-inline`}</inlineCode></p>\n    <CodeView codeText={inline} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"inline-block\"\n    }}>{`Inline block`}</h3>\n    <p>{`Class: `}<inlineCode parentName=\"p\">{`.u-inlineBlock`}</inlineCode></p>\n    <CodeView codeText={inlineBlock} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"block\"\n    }}>{`Block`}</h3>\n    <p>{`Class: `}<inlineCode parentName=\"p\">{`.u-block`}</inlineCode></p>\n    <CodeView codeText={block} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"flex\"\n    }}>{`Flex`}</h3>\n    <p>{`Class: `}<inlineCode parentName=\"p\">{`.u-flex`}</inlineCode>{`. See more about Flexbox.`}</p>\n    <CodeView codeText={flex} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"inline-flex\"\n    }}>{`Inline flex`}</h3>\n    <p>{`Class: `}<inlineCode parentName=\"p\">{`.u-flexInline`}</inlineCode></p>\n    <CodeView codeText={flexInline} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"hidden\"\n    }}>{`Hidden`}</h3>\n    <p>{`Class: `}<inlineCode parentName=\"p\">{`.u-hidden`}</inlineCode>{`. Use to hide elements without deleting and recreating them. In this example, the item \"Two\" is hidden.`}</p>\n    <CodeView codeText={hidden} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h3>\n    <p>{`Classes: `}<inlineCode parentName=\"p\">{`.u-table`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`.u-tableRow`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`.u-tableCell`}</inlineCode>{`. Use some \"div\" tags to make a table.`}</p>\n    <CodeView codeText={table} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"responsive-display\"\n    }}>{`Responsive display`}</h2>\n    <table className=\"Table u-backgroundWhite u-borderLeft  u-borderRight  u-borderBottom\">\n  <thead>\n    <tr>\n      <th width=\"200\">Screen Size</th>\n      <th>Class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td colSpan=\"2\" className=\"u-backgroundLightest\">\n        <strong>Hidden:</strong>\n      </td>\n    </tr>\n    <tr>\n      <td>Hidden on all</td>\n      <td><code>.u-hidden</code></td>\n    </tr>\n    <tr>\n      <td>Hidden only on sm</td>\n      <td><code>.sm:u-hidden .md:u-block</code></td>\n    </tr>\n    <tr>\n      <td>Hidden only on md</td>\n      <td><code>.md:u-hidden .lg:u-block</code></td>\n    </tr>\n    <tr>\n      <td>Hidden only on lg</td>\n      <td><code>.lg:u-hidden .xl:u-block</code></td>\n    </tr>\n    <tr>\n      <td>Hidden only on xl</td>\n      <td><code>.xl:u-hidden</code></td>\n    </tr>\n    <tr>\n      <td colSpan=\"2\" className=\"u-backgroundLightest\">\n        <strong>Visible:</strong>\n      </td>\n    </tr>\n    <tr>\n      <td>Visible on all</td>\n      <td><code>.u-block</code></td>\n    </tr>\n    <tr>\n      <td>Visible only on sm</td>\n      <td><code>.u-hidden .sm:u-block .md:u-hidden</code></td>\n    </tr>\n    <tr>\n      <td>Visible only on md</td>\n      <td><code>.u-hidden .md:u-block .lg:u-hidden</code></td>\n    </tr>\n    <tr>\n      <td>Visible only on lg</td>\n      <td><code>.u-hidden .lg:u-block .xl:u-hidden</code></td>\n    </tr>\n    <tr>\n      <td>Visible only on xl</td>\n      <td><code>.u-hidden .xl:u-block</code></td>\n    </tr>\n  </tbody>\n    </table>\nResize the browser to see the change:\n    <CodeView codeText={responsive} mdxType=\"CodeView\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}