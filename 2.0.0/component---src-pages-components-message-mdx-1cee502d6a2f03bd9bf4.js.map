{"version":3,"sources":["webpack:///./src/assets/structure/stb_message-structure.jpg","webpack:///./src/assets/structure/stb_message-structure@2x.jpg","webpack:///./src/pages/components/message.mdx"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","require","srcSet","alt","className","codeText","formMessage","systemMessage","exampleClassName","variantFormMessage","variantSystemMessage","layoutMessage","layout2Message","layout3Message","layout4Message","layout5Message","metadata","data","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,qE,qBCA3CD,EAAOC,QAAU,IAA0B,wE,uYC2B9BC,EAAe,GACtBC,EAAc,CAClBC,MATmB,aAUnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,WADR,WAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,iJACA,qBAAKC,IAAKC,EAAQ,QAAmDC,OAAWD,EAAQ,QAAb,MAAwEE,IAAI,sBACvJ,oBAAIC,UAAU,8BAChB,kCAEE,mBAAGA,UAAU,aAAb,0EAEF,kCAEE,mBAAGA,UAAU,aAAb,kHAEF,uCAEE,mBAAGA,UAAU,aAAb,kDAEF,qCAEE,mBAAGA,UAAU,aAAb,wHAEF,qCAEE,mBAAGA,UAAU,aAAb,2FAGA,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,SADR,SAGA,mBAAQ,CACN,GAAM,iBADR,iBAGA,8MACA,cAAC,IAAD,CAAUC,SAAUC,IAAaP,QAAQ,aACzC,mBAAQ,CACN,GAAM,mBADR,mBAGA,+PACA,cAAC,IAAD,CAAUM,SAAUE,IAAeR,QAAQ,aAC3C,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,mBADR,iBAGA,cAAC,IAAD,CAAUS,iBAAiB,mBAAmBH,SAAUI,IAAoBV,QAAQ,aACpF,mBAAQ,CACN,GAAM,qBADR,mBAGA,cAAC,IAAD,CAAUS,iBAAiB,mBAAmBH,SAAUK,IAAsBX,QAAQ,aACtF,mBAAQ,CACN,GAAM,UADR,UAGA,cAAC,IAAD,CAAUM,SAAUM,IAAeZ,QAAQ,aAC3C,cAAC,IAAD,CAAUM,SAAUO,IAAgBb,QAAQ,aAC5C,cAAC,IAAD,CAAUM,SAAUQ,IAAgBd,QAAQ,aAC5C,cAAC,IAAD,CAAUM,SAAUS,IAAgBf,QAAQ,aAC5C,cAAC,IAAD,CAAUM,SAAUU,IAAgBhB,QAAQ,aAC5C,mBAAQ,CACN,GAAM,oBADR,oBAGA,8BACA,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAciB,SAAUlB,EAAMmB,KAAKD,SAAUjB,QAAQ,kBAMzDH,EAAWsB,gBAAiB","file":"component---src-pages-components-message-mdx-1cee502d6a2f03bd9bf4.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/stb_message-structure-493866b83447a530d0dcd31af30e5953.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_message-structure@2x-49acc33fdd7cbadff3e624f4e21204b4.jpg\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport formMessage from 'src/examples/Message/default';\nimport systemMessage from 'src/examples/Message/system';\nimport variantFormMessage from 'src/examples/Message/variantForm';\nimport variantSystemMessage from 'src/examples/Message/variantSystem';\nimport layoutMessage from 'src/examples/Message/layout';\nimport layout2Message from 'src/examples/Message/layout-2';\nimport layout3Message from 'src/examples/Message/layout-3';\nimport layout4Message from 'src/examples/Message/layout-4';\nimport layout5Message from 'src/examples/Message/layout-5';\nexport const query = graphql`\n  query MessageMDXQuery {\n    metadata: componentMetadata(displayName: { eq: \"Message\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"message\"\n    }}>{`Message`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Using messages to communicate between system and users, to notify or to show the system's responses to userâ€™s actions.`}</p>\n    <img src={require('src/assets/structure/stb_message-structure.jpg')} srcSet={`${require('src/assets/structure/stb_message-structure@2x.jpg')} 2x`} alt=\"Message structure\" />\n    <ol className=\"u-textGray u-marginTopTiny\">\n  <li>\n        Heading\n    <i className=\"u-text200\"> -  Like a message title, using heading for message overview purpose.</i>\n  </li>\n  <li>\n        Message\n    <i className=\"u-text200\"> -  The information that the system wants to send to users. Message content can include paragraphs and links.</i>\n  </li>\n  <li>\n        Close button\n    <i className=\"u-text200\"> - Optional to close the message immediately.</i>\n  </li>\n  <li>\n        CTA button\n    <i className=\"u-text200\"> -  Designed for system messages only. CTA button is the main action that users can interact with a system message.</i>\n  </li>\n  <li>\n        Background\n    <i className=\"u-text200\"> - The message background attribute specifies the message variants by color changing.</i>\n  </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h3>\n    <h4 {...{\n      \"id\": \"form-messages\"\n    }}>{`Form messages`}</h4>\n    <p>{`Form messages are alerts that provide contextual feedback messages for user actions with input forms. It's available for any length of text, as well as an optional dismiss button.`}</p>\n    <CodeView codeText={formMessage} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"system-messages\"\n    }}>{`System messages`}</h4>\n    <p>{`System messages provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages. It's available for any length of text, a CTA button, as well as an optional dismiss button.`}</p>\n    <CodeView codeText={systemMessage} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <h4 {...{\n      \"id\": \"form-messages-1\"\n    }}>{`Form messages`}</h4>\n    <CodeView exampleClassName=\"example-messages\" codeText={variantFormMessage} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"system-messages-1\"\n    }}>{`System messages`}</h4>\n    <CodeView exampleClassName=\"example-messages\" codeText={variantSystemMessage} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"layout\"\n    }}>{`Layout`}</h3>\n    <CodeView codeText={layoutMessage} mdxType=\"CodeView\" />\n    <CodeView codeText={layout2Message} mdxType=\"CodeView\" />\n    <CodeView codeText={layout3Message} mdxType=\"CodeView\" />\n    <CodeView codeText={layout4Message} mdxType=\"CodeView\" />\n    <CodeView codeText={layout5Message} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`N/A`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.metadata} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}