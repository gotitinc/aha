{"version":3,"sources":["webpack:///./src/assets/structure/stb_sidebar-structure.jpg","webpack:///./src/assets/structure/stb_sidebar-structure@2x.jpg","webpack:///./src/pages/components/sidebar-menu.mdx"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","require","srcSet","className","alt","codeText","levelsSidebarMenu","transparentBackground","sizeMediumSidebarMenu","sizeSmallSidebarMenu","statesSidebarMenu","metadata","data","SidebarMenu","SidebarMenuItem","exportedBy","SidebarMenuSubMenu","isMDXComponent"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,qE,qBCA3CD,EAAOC,QAAU,IAA0B,wE,8RC4B9BC,EAAe,GACtBC,EAAc,CAClBC,MAfmB,aAgBnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,gBADR,gBAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,8MACA,qBAAKC,IAAKC,EAAQ,QAAmDC,OAAWD,EAAQ,QAAb,MAAwEE,UAAU,iBAAiBC,IAAI,YAClL,oBAAID,UAAU,8BAChB,oCAEE,mBAAGA,UAAU,aAAb,wKAEF,gCAEE,mBAAGA,UAAU,aAAb,0DAEF,gCAEE,mBAAGA,UAAU,aAAb,4IAEF,sCAEE,mBAAGA,UAAU,aAAb,wHAEF,oCAEE,mBAAGA,UAAU,aAAb,mDAEF,qCAEE,mBAAGA,UAAU,aAAb,kFAGA,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,UADR,UAGA,cAAC,IAAD,CAAUE,SAAUC,IAAmBC,uBAAqB,EAACR,QAAQ,aACrE,mBAAQ,CACN,GAAM,SADR,SAGA,mBAAQ,CACN,GAAM,UADR,UAGA,wCACA,cAAC,IAAD,CAAUM,SAAUG,IAAuBD,uBAAqB,EAACR,QAAQ,aACzE,mBAAQ,CACN,GAAM,SADR,SAGA,cAAC,IAAD,CAAUM,SAAUI,IAAsBF,uBAAqB,EAACR,QAAQ,aACxE,oFACA,mBAAQ,CACN,GAAM,UADR,UAGA,mBAAQ,CACN,GAAM,UADR,UAGA,yCACA,mBAAQ,CACN,GAAM,UADR,UAGA,uHACA,mBAAQ,CACN,GAAM,YADR,YAGA,uHACA,cAAC,IAAD,CAAUM,SAAUK,IAAmBX,QAAQ,aAC/C,mBAAQ,CACN,GAAM,oBADR,oBAGA,8BACA,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAcY,SAAUb,EAAMc,KAAKC,YAAad,QAAQ,iBACxD,cAAC,IAAD,CAAcY,SAAUb,EAAMc,KAAKE,gBAAiBC,WAAYjB,EAAMc,KAAKC,YAAad,QAAQ,iBAChG,cAAC,IAAD,CAAcY,SAAUb,EAAMc,KAAKI,mBAAoBD,WAAYjB,EAAMc,KAAKC,YAAad,QAAQ,kBAMvGH,EAAWqB,gBAAiB","file":"component---src-pages-components-sidebar-menu-mdx-3cab7e05b6cfa3e1f6af.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/stb_sidebar-structure-93e7ae90201aaf3d4101b1ff1dce2026.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_sidebar-structure@2x-8b35562587fd95f58436fea487ac6450.jpg\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport levelsSidebarMenu from 'src/examples/SidebarMenu/levels';\nimport statesSidebarMenu from 'src/examples/SidebarMenu/states';\nimport sizeMediumSidebarMenu from 'src/examples/SidebarMenu/sizeMedium';\nimport sizeSmallSidebarMenu from 'src/examples/SidebarMenu/sizeSmall';\nexport const query = graphql`\n  query SidebarMenuQuery {\n    SidebarMenu: componentMetadata(displayName: { eq: \"SidebarMenu\" }) {\n      ...ComponentApi_metadata\n    }\n    SidebarMenuItem: componentMetadata(displayName: { eq: \"SidebarMenuItem\" }) {\n      ...ComponentApi_metadata\n    }\n    SidebarMenuSubMenu: componentMetadata(displayName: { eq: \"SidebarMenuSubMenu\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"sidebar-menu\"\n    }}>{`Sidebar Menu`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Sidebar is a graphical control element that displays main navigation to the right or left side of an application window or operating system desktop to navigate away between pages.`}</p>\n    <img src={require('src/assets/structure/stb_sidebar-structure.jpg')} srcSet={`${require('src/assets/structure/stb_sidebar-structure@2x.jpg')} 2x`} className=\"u-maxWidthFull\" alt=\"Sidebar\" />\n    <ol className=\"u-textGray u-marginTopTiny\">\n  <li>\n      Left icon\n    <i className=\"u-text200\"> - Used to visualize the Menu Item and provide visual context and enhance usability. Menu Items in sub-menus do not support the left icon. Left icons are optional.</i>\n  </li>\n  <li>\n      Label\n    <i className=\"u-text200\"> - Concise & descriptive title of the content within.</i>\n  </li>\n  <li>\n      Badge\n    <i className=\"u-text200\"> - An optional right-aligned badge, that contains a status or a numeric value, to indicate a running tally or a quantity-based summary.</i>\n  </li>\n  <li>\n      Toggle icon\n    <i className=\"u-text200\"> - A left-aligned icon, used to visualize the sub-menu and provide clickable action to open and close the sub-menu.</i>\n  </li>\n  <li>\n      Indicator\n    <i className=\"u-text200\"> - A left border which indicates active items.</i>\n  </li>\n  <li>\n      Background\n    <i className=\"u-text200\"> - A slight change in background color of the item when hovered or selected.</i>\n  </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"levels\"\n    }}>{`Levels`}</h3>\n    <CodeView codeText={levelsSidebarMenu} transparentBackground mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <h4 {...{\n      \"id\": \"medium\"\n    }}>{`Medium`}</h4>\n    <p>{`Default size.`}</p>\n    <CodeView codeText={sizeMediumSidebarMenu} transparentBackground mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"small\"\n    }}>{`Small`}</h4>\n    <CodeView codeText={sizeSmallSidebarMenu} transparentBackground mdxType=\"CodeView\" />\n    <p>{`Smaller size can be applied for both Sidebar menu levels.`}</p>\n    <h3 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h3>\n    <h4 {...{\n      \"id\": \"normal\"\n    }}>{`Normal`}</h4>\n    <p>{`Default state.`}</p>\n    <h4 {...{\n      \"id\": \"active\"\n    }}>{`Active`}</h4>\n    <p>{`Item background color will be changed to grey with the Indicator activated in primary color.`}</p>\n    <h4 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h4>\n    <p>{`Item background color will be changed to grey with the Indicator activated in primary color.`}</p>\n    <CodeView codeText={statesSidebarMenu} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`N/A`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.SidebarMenu} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.SidebarMenuItem} exportedBy={props.data.SidebarMenu} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.SidebarMenuSubMenu} exportedBy={props.data.SidebarMenu} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}