{"version":3,"sources":["webpack:///./src/assets/structure/default-header-structure.jpg","webpack:///./src/pages/components/header.mdx","webpack:///./src/assets/structure/absolute-header-structure@2x.jpg","webpack:///./src/assets/structure/default-header-structure@2x.jpg","webpack:///./src/assets/structure/absolute-header-structure.jpg"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","require","srcSet","alt","className","transparentBackground","codeText","desktopHeader","mobileHeader","loginHeader","metadata","data","Header","HeaderContext","exportedBy","HeaderMobile","isMDXComponent"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,wE,yQC2B9BC,EAAe,GACtBC,EAAc,CAClBC,MAfmB,aAgBnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,UADR,UAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,4LACA,mBAAQ,CACN,GAAM,WADR,WAGA,qBAAKC,IAAKC,EAAQ,QAAsDC,OAAWD,EAAQ,QAAb,MAA2EE,IAAI,mBAAmBC,UAAU,mBAC1L,oBAAIA,UAAU,8BAChB,qIACA,uEACA,gKACA,+GACA,8EAEE,mBAAQ,CACN,GAAM,YADR,YAGA,qBAAKJ,IAAKC,EAAQ,QAAuDC,OAAWD,EAAQ,QAAb,MAA4EE,IAAI,mBAAmBC,UAAU,mBAC5L,oBAAIA,UAAU,8BAChB,qIACA,uEACA,gKACA,+GACA,wMAEE,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,kBADR,kBAGA,yFACA,cAAC,IAAD,CAAUC,uBAAqB,EAACC,SAAUC,IAAeR,QAAQ,aACjE,mBAAQ,CACN,GAAM,iBADR,iBAGA,cAAC,IAAD,CAAUM,uBAAqB,EAACC,SAAUE,IAAcT,QAAQ,aAChE,mBAAQ,CACN,GAAM,cADR,YAGA,cAAC,IAAD,CAAUM,uBAAqB,EAACC,SAAUG,IAAaV,QAAQ,aAC/D,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAcW,SAAUZ,EAAMa,KAAKC,OAAQb,QAAQ,iBACnD,cAAC,IAAD,CAAcW,SAAUZ,EAAMa,KAAKE,cAAeC,WAAYhB,EAAMa,KAAKI,aAAchB,QAAQ,iBAC/F,cAAC,IAAD,CAAcW,SAAUZ,EAAMa,KAAKI,aAAchB,QAAQ,kBAM7DH,EAAWoB,gBAAiB,G,qBClG5B3B,EAAOC,QAAU,IAA0B,4E,uBCA3CD,EAAOC,QAAU,IAA0B,2E,qBCA3CD,EAAOC,QAAU,IAA0B","file":"component---src-pages-components-header-mdx-9dafd95abd310ffa51d0.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/default-header-structure-96ec1895d49c92d2f2da3f6be1c127ad.jpg\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport desktopHeader from 'src/examples/Header/desktop';\nimport mobileHeader from 'src/examples/Header/mobile';\nimport loginHeader from 'src/examples/Header/login';\nexport const query = graphql`\n  query HeaderQuery {\n    Header: componentMetadata(displayName: { eq: \"Header\" }) {\n      ...ComponentApi_metadata\n    }\n    HeaderContext: componentMetadata(displayName: { eq: \"HeaderContext\" }) {\n      ...ComponentApi_metadata\n    }\n    HeaderMobile: componentMetadata(displayName: { eq: \"HeaderMobile\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"header\"\n    }}>{`Header`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Header structure is a template that explains the areas in the header and how it work which helps combine other components to create a consistent user experience.`}</p>\n    <h3 {...{\n      \"id\": \"default\"\n    }}>{`Default`}</h3>\n    <img src={require('src/assets/structure/default-header-structure.jpg')} srcSet={`${require('src/assets/structure/default-header-structure@2x.jpg')} 2x`} alt=\"Header structure\" className=\"u-maxWidthFull\" />\n    <ol className=\"u-textGray u-marginTopTiny\">\n  <li>Container: Using container to wrap header contents and grid system to set fix-width or full-width header.</li>\n  <li>Logo: Using this area for logo of the site.</li>\n  <li>Main content wrapper: Used to wrap all the header contents, except logo. This part is also replaced by a hamburger button on mobile.</li>\n  <li>Right: Often used to present icons, CTA buttons or components about users' account.</li>\n  <li>Left: Often used to display top menu of the site.</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"absolute\"\n    }}>{`Absolute`}</h3>\n    <img src={require('src/assets/structure/absolute-header-structure.jpg')} srcSet={`${require('src/assets/structure/absolute-header-structure@2x.jpg')} 2x`} alt=\"Header structure\" className=\"u-maxWidthFull\" />\n    <ol className=\"u-textGray u-marginTopTiny\">\n  <li>Container: Using container to wrap header contents and grid system to set fix-width or full-width header.</li>\n  <li>Logo: Using this area for logo of the site.</li>\n  <li>Main content wrapper: Used to wrap all the header contents, except logo. This part is also replaced by a hamburger button on mobile.</li>\n  <li>Right: Often used to present icons, CTA buttons or components about users' account.</li>\n  <li>Absolute center-aligned objects: Using this area to display the components which are always center-aligned such as a countdown or session remaining component in workspace.</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"desktop-layout\"\n    }}>{`Desktop layout`}</h3>\n    <p>{`Note: Only \"LEFT\" area or \"CENTER\" area is shown up at a time.`}</p>\n    <CodeView transparentBackground codeText={desktopHeader} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"mobile-layout\"\n    }}>{`Mobile layout`}</h3>\n    <CodeView transparentBackground codeText={mobileHeader} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"examples-1\"\n    }}>{`Examples`}</h3>\n    <CodeView transparentBackground codeText={loginHeader} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Header} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.HeaderContext} exportedBy={props.data.HeaderMobile} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.HeaderMobile} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/absolute-header-structure@2x-71a2faf4bac0d6791aaa0817bbf79d2e.jpg\";","module.exports = __webpack_public_path__ + \"static/default-header-structure@2x-4368077c64f44a4339e4a68d726a9fe6.jpg\";","module.exports = __webpack_public_path__ + \"static/absolute-header-structure-45f9a0a2abbcbfc7dd2293c139f04d17.jpg\";"],"sourceRoot":""}