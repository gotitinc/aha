{"version":3,"sources":["webpack:///./src/pages/components/calendar.mdx"],"names":["_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","codeText","metadata","data","DatePicker","DateRangePicker","TimePicker","isMDXComponent"],"mappings":"oQAwBaA,EAAe,GACtBC,EAAc,CAClBC,MAfmB,aAgBnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,UADR,UAGA,kCAAe,iCAAGC,WAAW,KAAQ,CACjC,KAAQ,iDADG,kBAAf,6BAGA,cAAC,IAAD,CAAUC,SAAQ,sKAKjBF,QAAQ,aACT,mBAAQ,CACN,GAAM,cADR,cAGA,kCAAe,iCAAGC,WAAW,KAAQ,CACjC,KAAQ,oDADG,qBAAf,6BAGA,cAAC,IAAD,CAAUC,SAAQ,wKAKjBF,QAAQ,aACT,mBAAQ,CACN,GAAM,mBADR,mBAGA,kCAAe,iCAAGC,WAAW,KAAQ,CACjC,KAAQ,oEADG,qCAAf,6BAGA,cAAC,IAAD,CAAUC,SAAQ,yLAKjBF,QAAQ,aACT,mBAAQ,CACN,GAAM,cADR,cAGA,kCAAe,iCAAGC,WAAW,KAAQ,CACjC,KAAQ,oDADG,qBAAf,6BAGA,cAAC,IAAD,CAAUC,SAAQ,gJAKjBF,QAAQ,aACT,mBAAQ,CACN,GAAM,oBADR,oBAGA,8BACA,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAcG,SAAUJ,EAAMK,KAAKC,WAAYL,QAAQ,iBACvD,cAAC,IAAD,CAAcG,SAAUJ,EAAMK,KAAKE,gBAAiBN,QAAQ,iBAC5D,cAAC,IAAD,CAAcG,SAAUJ,EAAMK,KAAKG,WAAYP,QAAQ,kBAM3DH,EAAWW,gBAAiB","file":"component---src-pages-components-calendar-mdx-5b42f8ab9e59eb91597d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nexport const query = graphql`\n  query CalendarQuery {\n    DatePicker: componentMetadata(displayName: { eq: \"DatePicker\" }) {\n      ...ComponentApi_metadata\n    }\n    DateRangePicker: componentMetadata(displayName: { eq: \"DateRangePicker\" }) {\n      ...ComponentApi_metadata\n    }\n    TimePicker: componentMetadata(displayName: { eq: \"TimePicker\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"calendar\"\n    }}>{`Calendar`}</h1>\n    <h2 {...{\n      \"id\": \"normal\"\n    }}>{`Normal`}</h2>\n    <p>{`Base on `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/react-calendar\"\n      }}>{`react-calendar`}</a>{`, modified default style.`}</p>\n    <CodeView codeText={`() => {\n  const [currentDate, setDate] = useState(new Date());\n  return (\n    <Calendar value={currentDate} onChange={date => setDate(currentDate)} />\n  );\n};`} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"datepicker\"\n    }}>{`DatePicker`}</h3>\n    <p>{`Base on `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/react-date-picker\"\n      }}>{`react-date-picker`}</a>{`, modified default style.`}</p>\n    <CodeView codeText={`() => {\n  const [currentDate, setDate] = useState(new Date());\n  return (\n    <DatePicker value={currentDate} onChange={date => setDate(currentDate)} />\n  );\n};`} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"daterangepicker\"\n    }}>{`DateRangePicker`}</h3>\n    <p>{`Base on `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@wojtekmaj/react-daterange-picker\"\n      }}>{`@wojtekmaj/react-daterange-picker`}</a>{`, modified default style.`}</p>\n    <CodeView codeText={`() => {\n  const [startDate, setStartDate] = useState([new Date(),new Date()]);\n  return (\n    <DateRangePicker value={startDate} onChange={date => setStartDate(date)} />\n  );\n};`} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"timepicker\"\n    }}>{`TimePicker`}</h3>\n    <p>{`Base on `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/react-time-picker\"\n      }}>{`react-time-picker`}</a>{`, modified default style.`}</p>\n    <CodeView codeText={`() => {\n  const [time, setTime] = useState('10:00');\n  return (\n    <TimePicker value={time} onChange={time => setTime(time)} />\n  );\n};`} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`N/A`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.DatePicker} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.DateRangePicker} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.TimePicker} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}