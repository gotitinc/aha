{"version":3,"sources":["webpack:///./src/assets/demo/cat.jpg","webpack:///./src/pages/css-utilities/object-fit.mdx"],"names":["module","exports","classExtractCursors","className","description","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","width","map","item","key","index","classNames","src","require","style","alt","isMDXComponent"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,mD,2PCS9BC,EAAsB,CAAC,CAClCC,UAAW,kBACXC,YAAa,iSACZ,CACDD,UAAW,gBACXC,YAAa,+NACZ,CACDD,UAAW,eACXC,YAAa,uOACZ,CACDD,UAAW,oBACXC,YAAa,wHACZ,CACDD,UAAW,eACXC,YAAa,yCAEFC,EAAe,GACtBC,EAAc,CAClBJ,sBACAG,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,cADR,cAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,6GAA0F,4BAAYC,WAAW,KAAvB,SAA1F,OAAmJ,4BAAYA,WAAW,KAAvB,WAAnJ,6CACA,mBAAQ,CACN,GAAM,aADR,aAGA,uBAAOV,UAAU,kFACnB,2BACE,wBACE,oBAAIW,MAAM,OAAV,aACA,mCACA,oBAAIA,MAAM,OAAV,iBAGJ,2BACGZ,EAAoBa,KAAI,SAAAC,GAAI,OAAI,oBAAIC,IAAKD,EAAKE,OAC3C,oBAAIf,UAAU,gBACZ,8BAAQa,EAAKb,YAEf,oBAAIA,UAAU,sBACZ,qBAAKA,UAAWgB,IAAW,4CACzB,qBAAKC,IAAKC,EAAQ,QAA4BlB,UAAWgB,IAAW,mCAAoCH,EAAKb,WAAaa,EAAKb,WAAYmB,MAAO,GAAIC,IAAI,yBAG9J,oBAAIpB,UAAU,cACXa,EAAKZ,oBAShBK,EAAWe,gBAAiB","file":"component---src-pages-css-utilities-object-fit-mdx-93d08183f0d0b25e5712.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/cat-a34c6798658526629528c2b73a64cbed.jpg\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport classNames from 'classnames';\nexport const classExtractCursors = [{\n  className: 'u-objectContain',\n  description: 'The replaced content is scaled to maintain its aspect ratio while fitting within the element’s content box. The entire object is made to fill the box, while preserving its aspect ratio, so the object will be \"letterboxed\" if its aspect ratio does not match the aspect ratio of the box.'\n}, {\n  className: 'u-objectCover',\n  description: 'The replaced content is sized to maintain its aspect ratio while filling the element’s entire content box. If the object\\'s aspect ratio does not match the aspect ratio of its box, then the object will be clipped to fit.'\n}, {\n  className: 'u-objectFill',\n  description: 'The replaced content is sized to fill the element’s content box. The entire object will completely fill the box. If the object\\'s aspect ratio does not match the aspect ratio of its box, then the object will be stretched to fit.'\n}, {\n  className: 'u-objectScaleDown',\n  description: 'The content is sized as if none or contain were specified, whichever would result in a smaller concrete object size.'\n}, {\n  className: 'u-objectNone',\n  description: 'The replaced content is not resized.'\n}];\nexport const _frontmatter = {};\nconst layoutProps = {\n  classExtractCursors,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"object-fit\"\n    }}>{`Object Fit`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`The object-fit CSS property sets how the content of a replaced element, such as an `}<inlineCode parentName=\"p\">{`<img>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<video>`}</inlineCode>{`, should be resized to fit its container.`}</p>\n    <h2 {...{\n      \"id\": \"classname\"\n    }}>{`ClassName`}</h2>\n    <table className=\"Table Table--layoutFixed u-backgroundWhite u-textDark u-border u-borderTopNone\">\n  <thead>\n    <tr>\n      <th width=\"200\">CSS Class</th>\n      <th>Preview</th>\n      <th width=\"320\">Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    {classExtractCursors.map(item => <tr key={item.index}>\n        <td className=\"u-textNoWrap\">\n          <code>.{item.className}</code>\n        </td>\n        <td className=\"u-positionRelative\">\n          <div className={classNames('u-backgroundLighter u-border borderGray')}>\n            <img src={require('src/assets/demo/cat.jpg')} className={classNames('u-block u-widthFull u-heightHuge', item.className && item.className)} style={{}} alt=\"Spot illustrations\" />\n          </div>\n        </td>\n        <td className=\"u-textGray\">\n          {item.description}\n        </td>\n      </tr>)}\n  </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}