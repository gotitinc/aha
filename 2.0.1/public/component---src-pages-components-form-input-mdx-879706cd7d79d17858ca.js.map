{"version":3,"sources":["webpack:///./src/pages/components/form-input.mdx","webpack:///./src/assets/structure/stb_input-text-area.jpg","webpack:///./src/assets/structure/stb_input-text-area@2x.jpg","webpack:///./src/assets/structure/stb_input-text-field@2x.jpg","webpack:///./src/assets/structure/stb_input-text-field.jpg"],"names":["_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","require","srcSet","className","alt","parentName","codeText","inputText","inputPassword","inputEmail","inputNumber","inputTextArea","inputSelect","inputMultiSelect","inputFile","inputNormal","inputDisabled","inputReadOnly","inputValid","inputInvalid","inputSizeSmall","inputSizeNormal","inputSizeLarge","groupBasic","group2Basic","group3Basic","groupButtonAddon","group2ButtonAddon","group3ButtonAddon","group4ButtonAddon","group5ButtonAddon","groupMultipleInput","groupMultipleAddon","groupSize","Group","controlId","Label","Input","isValid","type","Feedback","isInvalid","placeholder","metadata","data","FormInput","exportedBy","Form","FormFeedback","FormFile","FormSelect","FormLabel","FormGroup","isMDXComponent","module","exports"],"mappings":"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","file":"component---src-pages-components-form-input-mdx-879706cd7d79d17858ca.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport { Form } from '@ahaui/react';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport inputText from 'src/examples/Form/inputText';\nimport inputPassword from 'src/examples/Form/inputPassword';\nimport inputEmail from 'src/examples/Form/inputEmail';\nimport inputNumber from 'src/examples/Form/inputNumber';\nimport inputTextArea from 'src/examples/Form/inputTextArea';\nimport inputSelect from 'src/examples/Form/inputSelect';\nimport inputMultiSelect from 'src/examples/Form/inputMultiSelect';\nimport inputFile from 'src/examples/Form/inputFile';\nimport inputNormal from 'src/examples/Form/inputNormal';\nimport inputDisabled from 'src/examples/Form/inputDisabled';\nimport inputReadOnly from 'src/examples/Form/inputReadOnly';\nimport inputValid from 'src/examples/Form/inputValid';\nimport inputInvalid from 'src/examples/Form/inputInvalid';\nimport inputSizeSmall from 'src/examples/Form/inputSizeSmall';\nimport inputSizeNormal from 'src/examples/Form/inputSizeNormal';\nimport inputSizeLarge from 'src/examples/Form/inputSizeLarge';\nimport groupBasic from 'src/examples/Form/groupBasic';\nimport group2Basic from 'src/examples/Form/groupBasic-2';\nimport group3Basic from 'src/examples/Form/groupBasic-3';\nimport groupMultipleAddon from 'src/examples/Form/groupMultipleAddon';\nimport groupMultipleInput from 'src/examples/Form/groupMultipleInput';\nimport groupSize from 'src/examples/Form/groupSize';\nimport groupButtonAddon from 'src/examples/Form/groupButtonAddon';\nimport group2ButtonAddon from 'src/examples/Form/groupButtonAddon-2';\nimport group3ButtonAddon from 'src/examples/Form/groupButtonAddon-3';\nimport group4ButtonAddon from 'src/examples/Form/groupButtonAddon-4';\nimport group5ButtonAddon from 'src/examples/Form/groupButtonAddon-5';\nexport const query = graphql`\n  query FormQuery {\n    Form: componentMetadata(displayName: { eq: \"Form\" }) {\n      ...ComponentApi_metadata\n    }\n    FormInput: componentMetadata(displayName: { eq: \"FormInput\" }) {\n      ...ComponentApi_metadata\n    }\n    FormFeedback: componentMetadata(displayName: { eq: \"FormFeedback\" }) {\n      ...ComponentApi_metadata\n    }\n    FormFile: componentMetadata(displayName: { eq: \"FormFile\" }) {\n      ...ComponentApi_metadata\n    }\n    FormGroup: componentMetadata(displayName: { eq: \"FormGroup\" }) {\n      ...ComponentApi_metadata\n    }\n    FormLabel: componentMetadata(displayName: { eq: \"FormLabel\" }) {\n      ...ComponentApi_metadata\n    }\n    FormSelect: componentMetadata(displayName: { eq: \"FormSelect\" }) {\n      ...ComponentApi_metadata\n    }\n    FormGroup: componentMetadata(displayName: { eq: \"FormGroup\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"inputs\"\n    }}>{`Inputs`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Input fields/areas that allow users to enter/edit the input values.`}</p>\n    <h3 {...{\n      \"id\": \"text-input-single-line\"\n    }}>{`Text input (single line)`}</h3>\n    <img src={require('src/assets/structure/stb_input-text-field.jpg')} srcSet={`${require('src/assets/structure/stb_input-text-field@2x.jpg')} 2x`} className=\"u-maxWidthFull\" alt=\"Input structure\" />\n    <h3 {...{\n      \"id\": \"textarea-multiple-lines\"\n    }}>{`Textarea (multiple lines)`}</h3>\n    <img src={require('src/assets/structure/stb_input-text-area.jpg')} srcSet={`${require('src/assets/structure/stb_input-text-area@2x.jpg')} 2x`} className=\"u-maxWidthFull\" alt=\"Input structure\" />\n    <ol className=\"u-paddingLeftLarge u-textGray u-marginTopTiny\">\n  <li>\n    Label  &nbsp;\n    <i className=\"u-text200\">- Short descriptive text which corresponds to the information required inside the field.</i>\n  </li>\n  <li>\n    Placeholder&nbsp;\n    <i className=\"u-text200\">- The placeholder specifies a short hint that describes the expected value of an input field (i.e. a sample value or a short description of the expected format).</i>\n  </li>\n  <li>\n    Value&nbsp;\n    <i className=\"u-text200\">- The value specifies the text information, data or value which is entered by users.</i>\n  </li>\n  <li>\n    Feedback&nbsp;\n    <i className=\"u-text200\">- The feedback displays the messages from the system in specific cases i.e. invalid input, valid input, etc.</i>\n  </li>\n  <li>\n    Input border&nbsp;\n    <i className=\"u-text200\">- The input border attribute specifies different input states (hovered, invalid, valid, etc.) by colors.</i>\n  </li>\n  <li>\n    Input background&nbsp;\n    <i className=\"u-text200\">- The standard input background is white. It will only be changed to grey when the field is disabled.</i>\n  </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <p><strong parentName=\"p\">{`Text`}</strong></p>\n    <CodeView codeText={inputText} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Password`}</strong></p>\n    <CodeView codeText={inputPassword} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Email`}</strong></p>\n    <CodeView codeText={inputEmail} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Number`}</strong></p>\n    <CodeView codeText={inputNumber} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Textarea`}</strong></p>\n    <CodeView codeText={inputTextArea} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Select`}</strong></p>\n    <CodeView codeText={inputSelect} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Multiple select`}</strong></p>\n    <CodeView codeText={inputMultiSelect} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`File input`}</strong></p>\n    <CodeView codeText={inputFile} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h3>\n    <p><strong parentName=\"p\">{`Normal`}</strong></p>\n    <CodeView codeText={inputNormal} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Disabled`}</strong></p>\n    <p>{`Disabled fields can’t be focused on. Their values are uneditable and can be passed through the submission process`}</p>\n    <CodeView codeText={inputDisabled} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Read-only`}</strong></p>\n    <p>{`Read-only fields’ values are uneditable but can be focused and passed through the submission process`}</p>\n    <CodeView codeText={inputReadOnly} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Valid`}</strong></p>\n    <p>{`Valid fields contain values which are verified by real-time checking system`}</p>\n    <CodeView codeText={inputValid} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Invalid`}</strong></p>\n    <p>{`Invalid fields contain values which are marked as invalid by real-time checking system`}</p>\n    <CodeView codeText={inputInvalid} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <p><strong parentName=\"p\">{`Small (container height = 28px)`}</strong></p>\n    <CodeView codeText={inputSizeSmall} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Normal (container height = 36px)`}</strong></p>\n    <CodeView codeText={inputSizeNormal} mdxType=\"CodeView\" />\n    <p><strong parentName=\"p\">{`Large (container height = 48px)`}</strong></p>\n    <CodeView codeText={inputSizeLarge} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"form-group\"\n    }}>{`Form Group`}</h2>\n    <p>{`Input group wraps inputs and buttons for more complex components.`}</p>\n    <p>{`Place one add-on or button on either side of an input. You may also place one on both sides of an input. Remember to place  `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{` above the input group.`}</p>\n    <CodeView codeText={groupBasic} mdxType=\"CodeView\" />\n    <CodeView codeText={group2Basic} mdxType=\"CodeView\" />\n    <CodeView codeText={group3Basic} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"button-addons\"\n    }}>{`Button addons`}</h3>\n    <CodeView codeText={groupButtonAddon} mdxType=\"CodeView\" />\n    <CodeView codeText={group2ButtonAddon} mdxType=\"CodeView\" />\n    <CodeView codeText={group3ButtonAddon} mdxType=\"CodeView\" />\n    <CodeView codeText={group4ButtonAddon} mdxType=\"CodeView\" />\n    <CodeView codeText={group5ButtonAddon} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"multiple-inputs\"\n    }}>{`Multiple inputs`}</h3>\n    <CodeView codeText={groupMultipleInput} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"multiple-addons\"\n    }}>{`Multiple addons`}</h3>\n    <CodeView codeText={groupMultipleAddon} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"sizes-1\"\n    }}>{`Sizes`}</h3>\n    <CodeView codeText={groupSize} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`Don’t use multiple lines for label & feedback`}</p>\n    <div className=\"Grid u-marginBottomLarge\">\n  <div className=\"u-sizeFull md:u-size1of2\">\n    <Form.Group controlId=\"exampleForm.DSRe1\">\n      <Form.Label>Input</Form.Label>\n      <Form.Input isValid type=\"text\"></Form.Input>\n      <Form.Feedback>Lorem Ipsum is simply dummy text</Form.Feedback>\n    </Form.Group>\n    <div className=\"u-borderBottom u-borderLarge u-borderPositive u-marginTopSmall u-paddingTopMedium\" />\n    <div className=\"u-textPositive\">Do</div>\n  </div>\n  <div className=\"u-sizeFull md:u-size1of2\">\n    <Form.Group controlId=\"exampleForm.DSRe2\">\n      <Form.Label>Input</Form.Label>\n      <Form.Input isInvalid type=\"text\"></Form.Input>\n      <Form.Feedback type=\"invalid\">Lorem Ipsum is simply dummy text</Form.Feedback>\n      <Form.Feedback type=\"invalid\">Lorem Ipsum is simply dummy text</Form.Feedback>\n    </Form.Group>\n    <div className=\"u-borderBottom u-borderLarge u-borderNegative u-marginTopSmall\" />\n    <div className=\"u-textNegative\">Don't</div>\n  </div>\n    </div>\n    <p>{`Avoid too long placeholder, label & feedback`}</p>\n    <div className=\"Grid u-marginBottomLarge\">\n  <div className=\"u-sizeFull md:u-size1of2\">\n    <Form.Group controlId=\"exampleForm.DSRe3\" className=\"u-paddingBottomTiny\">\n      <Form.Label>Input</Form.Label>\n      <Form.Input isValid type=\"text\" placeholder=\"Lorem Ipsum is simply dummy text\"></Form.Input>\n      <Form.Feedback>Lorem Ipsum is simply dummy text</Form.Feedback>\n    </Form.Group>\n    <div className=\"u-borderBottom u-borderLarge u-borderPositive u-marginTopSmall u-paddingTopSmall\" />\n    <div className=\"u-textPositive\">Do</div>\n  </div>\n  <div className=\"u-sizeFull md:u-size1of2\">\n    <Form.Group controlId=\"exampleForm.DSRe4\">\n      <Form.Label>Input</Form.Label>\n      <Form.Input isInvalid type=\"text\" placeholder=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"></Form.Input>\n      <Form.Feedback type=\"invalid\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry.</Form.Feedback>\n    </Form.Group>\n    <div className=\"u-borderBottom u-borderLarge u-borderNegative u-marginTopSmall\" />\n    <div className=\"u-textNegative\">Don't</div>\n  </div>\n    </div>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.FormInput} exportedBy={props.data.Form} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.FormFeedback} exportedBy={props.data.Form} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.FormFile} exportedBy={props.data.Form} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.FormSelect} exportedBy={props.data.Form} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.FormLabel} exportedBy={props.data.Form} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.FormGroup} exportedBy={props.data.Form} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/stb_input-text-area-9002b622929e2f8ae442369a2038d9ce.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_input-text-area@2x-060f2ad8810130486ea36ca85d09c031.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_input-text-field@2x-49117b161a5191154a9ba61bc171ac9a.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_input-text-field-0f98707ff642273d177ada1845c27520.jpg\";"],"sourceRoot":""}