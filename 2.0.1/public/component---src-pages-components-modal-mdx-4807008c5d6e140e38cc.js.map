{"version":3,"sources":["webpack:///./src/pages/components/modal.mdx","webpack:///./src/assets/structure/stb_modal-structure.jpg","webpack:///./src/assets/structure/stb_modal-structure@2x.jpg"],"names":["_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","require","srcSet","alt","className","exampleClassName","codeText","smallModal","mediumModal","largeModal","extraLargeModal","oneCTAModal","twoCTAModal","twoCTAFullModal","twoCTAPartModal","stepModal","askModal","launchModal","metadata","data","Modal","ModalHeader","exportedBy","isMDXComponent","module","exports"],"mappings":"6eAgCaA,EAAe,GACtBC,EAAc,CAClBC,MAZmB,aAanBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,SADR,SAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,yKACA,4EAAyD,4BAAYC,WAAW,KAAvB,OAAzD,6FACA,qBAAKC,IAAKC,EAAQ,QAAiDC,OAAWD,EAAQ,QAAb,MAAsEE,IAAI,oBACnJ,oBAAIC,UAAU,8BAChB,iCAEE,mBAAGA,UAAU,aAAb,+CAEF,+BAEE,mBAAGA,UAAU,aAAb,8QAEF,iCAEE,mBAAGA,UAAU,aAAb,uDAEF,oCAEE,mBAAGA,UAAU,aAAb,oIAGA,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,SADR,SAGA,8EACA,mBAAQ,CACN,GAAM,SADR,SAGA,cAAC,IAAD,CAAUC,iBAAiB,gBAAgBC,SAAUC,IAAYT,QAAQ,aACzE,mBAAQ,CACN,GAAM,UADR,UAGA,cAAC,IAAD,CAAUO,iBAAiB,gBAAgBC,SAAUE,IAAaV,QAAQ,aAC1E,mBAAQ,CACN,GAAM,SADR,SAGA,cAAC,IAAD,CAAUO,iBAAiB,gBAAgBC,SAAUG,IAAYX,QAAQ,aACzE,mBAAQ,CACN,GAAM,eADR,eAGA,cAAC,IAAD,CAAUO,iBAAiB,gBAAgBC,SAAUI,IAAiBZ,QAAQ,aAC9E,mBAAQ,CACN,GAAM,gBADR,gBAGA,mBAAQ,CACN,GAAM,WADR,WAGA,0GACA,cAAC,IAAD,CAAUO,iBAAiB,gBAAgBC,SAAUK,IAAab,QAAQ,aAC1E,mBAAQ,CACN,GAAM,WADR,WAGA,yFACA,cAAC,IAAD,CAAUO,iBAAiB,gBAAgBC,SAAUM,IAAad,QAAQ,aAC1E,mBAAQ,CACN,GAAM,wBADR,wBAGA,oGACA,cAAC,IAAD,CAAUO,iBAAiB,gBAAgBC,SAAUO,IAAiBf,QAAQ,aAC9E,mBAAQ,CACN,GAAM,uBADR,uBAGA,4FACA,cAAC,IAAD,CAAUO,iBAAiB,gBAAgBC,SAAUQ,IAAiBhB,QAAQ,aAC9E,mBAAQ,CACN,GAAM,kBADR,kBAGA,gLACA,cAAC,IAAD,CAAUO,iBAAiB,eAAeC,SAAUS,IAAWjB,QAAQ,aACvE,mBAAQ,CACN,GAAM,kBADR,kBAGA,qIACA,cAAC,IAAD,CAAUO,iBAAiB,gBAAgBC,SAAUU,IAAUlB,QAAQ,aACvE,mBAAQ,CACN,GAAM,aADR,aAGA,cAAC,IAAD,CAAUQ,SAAUW,IAAanB,QAAQ,aACzC,mBAAQ,CACN,GAAM,oBADR,oBAGA,8BACA,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAcoB,SAAUrB,EAAMsB,KAAKC,MAAOtB,QAAQ,iBAClD,cAAC,IAAD,CAAcoB,SAAUrB,EAAMsB,KAAKE,YAAaC,WAAYzB,EAAMsB,KAAKC,MAAOtB,QAAQ,kBAM1FH,EAAW4B,gBAAiB,G,qBCpJ5BC,EAAOC,QAAU,IAA0B,mE,qBCA3CD,EAAOC,QAAU,IAA0B","file":"component---src-pages-components-modal-mdx-4807008c5d6e140e38cc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport smallModal from 'src/examples/Modal/small';\nimport mediumModal from 'src/examples/Modal/medium';\nimport largeModal from 'src/examples/Modal/large';\nimport extraLargeModal from 'src/examples/Modal/extraLarge';\nimport oneCTAModal from 'src/examples/Modal/oneCTA';\nimport twoCTAModal from 'src/examples/Modal/twoCTA';\nimport twoCTAFullModal from 'src/examples/Modal/twoCTAFull';\nimport twoCTAPartModal from 'src/examples/Modal/twoCTAPart';\nimport stepModal from 'src/examples/Modal/step';\nimport launchModal from 'src/examples/Modal/launch';\nimport askModal from 'src/examples/Modal/ask';\nexport const query = graphql`\n  query ModalMDXQuery {\n    Modal: componentMetadata(displayName: { eq: \"Modal\" }) {\n      ...ComponentApi_metadata\n    }\n    ModalHeader: componentMetadata(displayName: { eq: \"ModalHeader\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Using modals to provide an opportunity to display content in a layer above the app, requiring user interaction with focused actions or alerts.`}</p>\n    <p>{`Standard modals are basic containers with a close `}<inlineCode parentName=\"p\">{`“X”`}</inlineCode>{`. The primary action button is a primary system color, other actions are secondary color.`}</p>\n    <img src={require('src/assets/structure/stb_modal-structure.jpg')} srcSet={`${require('src/assets/structure/stb_modal-structure@2x.jpg')} 2x`} alt=\"Modal structure\" />\n    <ol className=\"u-textGray u-marginTopTiny\">\n  <li>\n      Header\n    <i className=\"u-text200\"> -  Contains modal title and close button.</i>\n  </li>\n  <li>\n      Body\n    <i className=\"u-text200\"> - Includes paragraphs, forms, images or icons which have a purpose to overview or add more detail for the modal title, or provide input forms to get data from users to complete a task. The body has top padding is 16px while left, right and bottom padding are 24px.</i>\n  </li>\n  <li>\n      Footer\n    <i className=\"u-text200\"> - Contains CTA buttons and notes for the actions.</i>\n  </li>\n  <li>\n      Container\n    <i className=\"u-text200\"> - Using container as a wrapper of header, body, and footer; make a separation between modal and the background by its shadow.</i>\n  </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <p>{`Depends on content to choose a suitable modal size.`}</p>\n    <h4 {...{\n      \"id\": \"small\"\n    }}>{`Small`}</h4>\n    <CodeView exampleClassName=\"example-modal\" codeText={smallModal} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"medium\"\n    }}>{`Medium`}</h4>\n    <CodeView exampleClassName=\"example-modal\" codeText={mediumModal} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"large\"\n    }}>{`Large`}</h4>\n    <CodeView exampleClassName=\"example-modal\" codeText={largeModal} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"extra-large\"\n    }}>{`Extra large`}</h4>\n    <CodeView exampleClassName=\"example-modal\" codeText={extraLargeModal} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"footer-types\"\n    }}>{`Footer types`}</h3>\n    <h4 {...{\n      \"id\": \"one-cta\"\n    }}>{`One CTA`}</h4>\n    <p>{`Using a full width button for CTA to gain more focus and expand the click area.`}</p>\n    <CodeView exampleClassName=\"example-modal\" codeText={oneCTAModal} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"two-cta\"\n    }}>{`Two CTA`}</h4>\n    <p>{`Using auto-width buttons for CTAs and left-aligned as default.`}</p>\n    <CodeView exampleClassName=\"example-modal\" codeText={twoCTAModal} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"two-cta---full-width\"\n    }}>{`Two CTA - Full width`}</h4>\n    <p>{`Using 2 full width buttons in some case CTA button's copies are too long.`}</p>\n    <CodeView exampleClassName=\"example-modal\" codeText={twoCTAFullModal} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"two-cta---2-columns\"\n    }}>{`Two CTA - 2 columns`}</h4>\n    <p>{`Using 2 columns button for small modal size only to keep balance.`}</p>\n    <CodeView exampleClassName=\"example-modal\" codeText={twoCTAPartModal} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"multiple-steps\"\n    }}>{`Multiple steps`}</h4>\n    <p>{`Using for showing multiple steps of modals. A primary button is right-aligned for next action and a secondary button is left-aligned for back action.`}</p>\n    <CodeView exampleClassName=\"exampleModal\" codeText={stepModal} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"accent-buttons\"\n    }}>{`Accent buttons`}</h4>\n    <p>{`Replace a primary button by an accent button when using modal for Ask flow or Payment flow with all types.`}</p>\n    <CodeView exampleClassName=\"example-modal\" codeText={askModal} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"live-demo\"\n    }}>{`Live demo`}</h3>\n    <CodeView codeText={launchModal} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`N/A`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Modal} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.ModalHeader} exportedBy={props.data.Modal} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/stb_modal-structure-d0d09879fb4814f1e089ebcd233583ce.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_modal-structure@2x-8a6fd5f7865d306d686b8b94aab767a2.jpg\";"],"sourceRoot":""}