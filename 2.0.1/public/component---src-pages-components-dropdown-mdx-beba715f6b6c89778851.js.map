{"version":3,"sources":["webpack:///./src/assets/structure/stb_dropdown-structure.jpg","webpack:///./src/assets/structure/stb_dropdown-structure@2x.jpg","webpack:///./src/pages/components/dropdown.mdx"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","require","srcSet","className","alt","codeText","downLeft","downRight","upLeft","upRight","metadata","data","Dropdown","DropdownButton","exportedBy","DropdownToggle","DropdownContainer","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,sE,qBCA3CD,EAAOC,QAAU,IAA0B,yE,8RCmC9BC,EAAe,GACtBC,EAAc,CAClBC,MAtBmB,aAuBnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,+JACA,qBAAKC,IAAKC,EAAQ,QAAoDC,OAAWD,EAAQ,QAAb,MAAyEE,UAAU,iBAAiBC,IAAI,aACpL,oBAAID,UAAU,8BAChB,+BAEE,mBAAGA,UAAU,aAAb,iCAEF,wCAEE,mBAAGA,UAAU,aAAb,uDAGA,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,cADR,cAGA,+IACA,mBAAQ,CACN,GAAM,aADR,aAGA,cAAC,IAAD,CAAUE,SAAUC,IAAUP,QAAQ,aACtC,mBAAQ,CACN,GAAM,cADR,cAGA,cAAC,IAAD,CAAUM,SAAUE,IAAWR,QAAQ,aACvC,mBAAQ,CACN,GAAM,WADR,WAGA,cAAC,IAAD,CAAUM,SAAUG,IAAQT,QAAQ,aACpC,mBAAQ,CACN,GAAM,YADR,YAGA,cAAC,IAAD,CAAUM,SAAUI,IAASV,QAAQ,aACrC,mBAAQ,CACN,GAAM,oBADR,oBAGA,8BACA,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAcW,SAAUZ,EAAMa,KAAKC,SAAUb,QAAQ,iBACrD,cAAC,IAAD,CAAcW,SAAUZ,EAAMa,KAAKE,eAAgBC,WAAYhB,EAAMa,KAAKC,SAAUb,QAAQ,iBAC5F,cAAC,IAAD,CAAcW,SAAUZ,EAAMa,KAAKI,eAAgBD,WAAYhB,EAAMa,KAAKC,SAAUb,QAAQ,iBAC5F,cAAC,IAAD,CAAcW,SAAUZ,EAAMa,KAAKK,kBAAmBF,WAAYhB,EAAMa,KAAKC,SAAUb,QAAQ,kBAMnGH,EAAWqB,gBAAiB","file":"component---src-pages-components-dropdown-mdx-beba715f6b6c89778851.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/stb_dropdown-structure-0bc9d44d19b5ed4b0ac8690b5a34bfa2.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_dropdown-structure@2x-26ef8f860e193e91627fe65604769f29.jpg\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport downLeft from 'src/examples/Dropdown/downLeft';\nimport downRight from 'src/examples/Dropdown/downRight';\nimport upLeft from 'src/examples/Dropdown/upLeft';\nimport upRight from 'src/examples/Dropdown/upRight';\nexport const query = graphql`\n  query DropdownMDXQuery {\n    Dropdown: componentMetadata(displayName: { eq: \"Dropdown\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n    DropdownButton: componentMetadata(displayName: { eq: \"DropdownButton\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n    DropdownToggle: componentMetadata(displayName: { eq: \"DropdownToggle\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n    DropdownContainer: componentMetadata(displayName: { eq: \"DropdownContainer\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"dropdown\"\n    }}>{`Dropdown`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Dropdowns are contextual overlays used to display lists of actions, which are triggered by toggleable parent objects (i.e. buttons).`}</p>\n    <img src={require('src/assets/structure/stb_dropdown-structure.jpg')} srcSet={`${require('src/assets/structure/stb_dropdown-structure@2x.jpg')} 2x`} className=\"u-maxWidthFull\" alt=\"Dropdown\" />\n    <ol className=\"u-textGray u-marginTopTiny\">\n  <li>\n    Menu\n    <i className=\"u-text200\"> - Contain actionable items.</i>\n  </li>\n  <li>\n    Parent object\n    <i className=\"u-text200\"> - Toggleable objects that trigger the overlays. </i>\n  </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"directions\"\n    }}>{`Directions`}</h3>\n    <p>{`Based on the position of itâ€™s parent object (i.e. buttons), the dropdowns will be displayed with several directions:`}</p>\n    <h4 {...{\n      \"id\": \"down-left\"\n    }}>{`Down-left`}</h4>\n    <CodeView codeText={downLeft} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"down-right\"\n    }}>{`Down-right`}</h4>\n    <CodeView codeText={downRight} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"up-left\"\n    }}>{`Up-left`}</h4>\n    <CodeView codeText={upLeft} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"up-right\"\n    }}>{`Up-right`}</h4>\n    <CodeView codeText={upRight} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`N/A`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Dropdown} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.DropdownButton} exportedBy={props.data.Dropdown} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.DropdownToggle} exportedBy={props.data.Dropdown} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.DropdownContainer} exportedBy={props.data.Dropdown} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}