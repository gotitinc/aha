{"version":3,"sources":["webpack:///./src/pages/css-utilities/user-select.mdx"],"names":["classExtractCursors","className","description","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","width","map","item","key","index","classNames","isMDXComponent"],"mappings":"qTASaA,EAAsB,CAAC,CAClCC,UAAW,mBACXC,YAAa,0DACZ,CACDD,UAAW,mBACXC,YAAa,4BACZ,CACDD,UAAW,mBACXC,YAAa,wCACZ,CACDD,UAAW,kBACXC,YAAa,oEAEFC,EAAe,GACtBC,EAAc,CAClBJ,sBACAG,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,eADR,eAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,6GACA,mBAAQ,CACN,GAAM,aADR,aAGA,uBAAOT,UAAU,kFACnB,2BACE,wBACE,oBAAIU,MAAM,OAAV,aACA,oBAAIA,MAAM,OAAV,WACA,yCAGJ,2BACGX,EAAoBY,KAAI,SAAAC,GAAI,OAAI,oBAAIC,IAAKD,EAAKE,OAC3C,oBAAId,UAAU,gBACZ,8BAAQY,EAAKZ,YAEf,oBAAIA,UAAU,sBACZ,qBAAKA,UAAWe,IAAW,8IAA+IH,EAAKZ,WAAaY,EAAKZ,YAAjM,qBAIF,oBAAIA,UAAU,cACXY,EAAKX,oBAShBK,EAAWU,gBAAiB","file":"component---src-pages-css-utilities-user-select-mdx-5eaa5a580f0b15d6c527.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport classNames from 'classnames';\nexport const classExtractCursors = [{\n  className: 'u-userSelectAuto',\n  description: 'Default. Text can be selected if the browser allows it'\n}, {\n  className: 'u-userSelectNone',\n  description: 'Prevent text selection\t'\n}, {\n  className: 'u-userSelectText',\n  description: 'The text can be selected by the user'\n}, {\n  className: 'u-userSelectAll',\n  description: 'Text selection is made with one click instead of a double-click'\n}];\nexport const _frontmatter = {};\nconst layoutProps = {\n  classExtractCursors,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"user-select\"\n    }}>{`User Select`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Use the CSS-Utility user-select to control the text of an element can be selected.`}</p>\n    <h2 {...{\n      \"id\": \"classname\"\n    }}>{`ClassName`}</h2>\n    <table className=\"Table Table--layoutFixed u-backgroundWhite u-textDark u-border u-borderTopNone\">\n  <thead>\n    <tr>\n      <th width=\"200\">CSS Class</th>\n      <th width=\"140\">Preview</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    {classExtractCursors.map(item => <tr key={item.index}>\n        <td className=\"u-textNoWrap\">\n          <code>.{item.className}</code>\n        </td>\n        <td className=\"u-positionRelative\">\n          <div className={classNames('u-marginExtraSmall u-positionAbsolute u-positionFull u-flex u-alignItemsCenter u-justifyContentCenter u-paddingHorizontalSmall u-textNoWrap', item.className && item.className)}>\n            Double-click me!\n          </div>\n        </td>\n        <td className=\"u-textGray\">\n          {item.description}\n        </td>\n      </tr>)}\n  </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}