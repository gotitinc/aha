{"version":3,"sources":["webpack:///./src/assets/structure/stb_pagination-structure.jpg","webpack:///./src/assets/structure/stb_pagination-structure@2x.jpg","webpack:///./src/pages/components/pagination.mdx"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","require","srcSet","alt","className","codeText","centerAlignedPagination","leftAlignedPagination","exampleClassName","sizesPagination","lessThan7Pagination","moreThan7Pagination","metadata","data","Pagination","PaginationItem","exportedBy","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,wE,qBCA3CD,EAAOC,QAAU,IAA0B,2E,mTC0B9BC,EAAe,GACtBC,EAAc,CAClBC,MAZmB,aAanBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,cADR,cAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,gJACA,qBAAKC,IAAKC,EAAQ,QAAsDC,OAAWD,EAAQ,QAAb,MAA2EE,IAAI,yBAC7J,oBAAIC,UAAU,8BAChB,wCAEE,mBAAGA,UAAU,aAAb,wEAEF,0CAEE,mBAAGA,UAAU,aAAb,iEAEF,qCAEE,mBAAGA,UAAU,aAAb,oFAGA,mBAAQ,CACN,GAAM,YADR,YAGA,yLACA,mBAAQ,CACN,GAAM,aADR,aAGA,mBAAQ,CACN,GAAM,UADR,UAGA,cAAC,IAAD,CAAUC,SAAUC,IAAyBP,QAAQ,aACrD,mBAAQ,CACN,GAAM,QADR,QAGA,cAAC,IAAD,CAAUM,SAAUE,IAAuBR,QAAQ,aACnD,mBAAQ,CACN,GAAM,SADR,SAGA,qJACA,cAAC,IAAD,CAAUS,iBAAiB,sBAAsBH,SAAUI,IAAiBV,QAAQ,aACpF,mBAAQ,CACN,GAAM,aADR,aAGA,mBAAQ,CACN,GAAM,iCADR,iCAGA,qKACA,cAAC,IAAD,CAAUS,iBAAiB,sBAAsBH,SAAUK,IAAqBX,QAAQ,aACxF,mBAAQ,CACN,GAAM,qBADR,qBAGA,wMACA,cAAC,IAAD,CAAUS,iBAAiB,sBAAsBH,SAAUM,IAAqBZ,QAAQ,aACxF,mBAAQ,CACN,GAAM,oBADR,oBAGA,8BACA,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAca,SAAUd,EAAMe,KAAKC,WAAYf,QAAQ,iBACvD,cAAC,IAAD,CAAca,SAAUd,EAAMe,KAAKE,eAAgBC,WAAYlB,EAAMe,KAAKC,WAAYf,QAAQ,kBAMlGH,EAAWqB,gBAAiB","file":"component---src-pages-components-pagination-mdx-0ca77e5f2be51cb8fcfc.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/stb_pagination-structure-464ed44c482688ad651346478c8a0622.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_pagination-structure@2x-9ba769cdbc7471cc14929a76e82bc8cd.jpg\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport centerAlignedPagination from 'src/examples/Pagination/centerAligned';\nimport leftAlignedPagination from 'src/examples/Pagination/leftAligned';\nimport sizesPagination from 'src/examples/Pagination/sizes';\nimport lessThan7Pagination from 'src/examples/Pagination/lessThan7';\nimport moreThan7Pagination from 'src/examples/Pagination/moreThan7';\nexport const query = graphql`\n  query PaginationMDXQuery {\n    Pagination: componentMetadata(displayName: { eq: \"Pagination\" }) {\n      ...ComponentApi_metadata\n    }\n    PaginationItem: componentMetadata(displayName: { eq: \"PaginationItem\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"pagination\"\n    }}>{`Pagination`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Using pagination to navigate pages of component listings. It helps users easily move between a large number of pages.`}</p>\n    <img src={require('src/assets/structure/stb_pagination-structure.jpg')} srcSet={`${require('src/assets/structure/stb_pagination-structure@2x.jpg')} 2x`} alt=\"Pagination structure\" />\n    <ol className=\"u-textGray u-marginTopTiny\">\n  <li>\n    Previous/Next\n    <i className=\"u-text200\"> - Navigate backward and forwards from the currently selected page.</i>\n  </li>\n  <li>\n    Page navigation\n    <i className=\"u-text200\"> - Navigate to a specific page by selecting the page number.</i>\n  </li>\n  <li>\n    Truncation\n    <i className=\"u-text200\"> - When a threshold of pages is reached, the list is truncated using ellipses.</i>\n  </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`The Previous button, Next button, First-page item, and Last-page item are always visible by default. The UI could be different depends on the number of pages.`}</p>\n    <h3 {...{\n      \"id\": \"alignment\"\n    }}>{`Alignment`}</h3>\n    <h4 {...{\n      \"id\": \"center\"\n    }}>{`Center`}</h4>\n    <CodeView codeText={centerAlignedPagination} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"left\"\n    }}>{`Left`}</h4>\n    <CodeView codeText={leftAlignedPagination} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <p>{`Pagination component shares the same sizes as the Buttons component. However, buttons in pagination must be the same size.`}</p>\n    <CodeView exampleClassName=\"example-paginations\" codeText={sizesPagination} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"structure\"\n    }}>{`Structure`}</h3>\n    <h4 {...{\n      \"id\": \"less-than-or-equal-to-7-items\"\n    }}>{`Less than or equal to 7 items`}</h4>\n    <p>{`If the first page is active, then the Previous button will be disabled. If the last page is active, then the Next button will be disabled.`}</p>\n    <CodeView exampleClassName=\"example-paginations\" codeText={lessThan7Pagination} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"more-than-7-items\"\n    }}>{`More than 7 items`}</h4>\n    <p>{`Except for the Previous and Next buttons, the total number of visible items is fixed to 7. While the first and last items are always visible, 5 extant items can move around.`}</p>\n    <CodeView exampleClassName=\"example-paginations\" codeText={moreThan7Pagination} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`N/A`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Pagination} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.PaginationItem} exportedBy={props.data.Pagination} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}