{"version":3,"sources":["webpack:///./src/assets/structure/stb_rating-structure@2x.jpg","webpack:///./src/assets/structure/stb_rating-structure.jpg","webpack:///./src/pages/components/rating.mdx"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","require","srcSet","alt","className","codeText","selectedRating","withLabelRating","withNumberRating","metadata","data","isMDXComponent"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,uE,uBCA3CD,EAAOC,QAAU,IAA0B,oE,yQCqB9BC,EAAe,GACtBC,EAAc,CAClBC,MATmB,aAUnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,UADR,UAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,sJACA,qBAAKC,IAAKC,EAAQ,QAAkDC,OAAWD,EAAQ,QAAb,MAAuEE,IAAI,qBACrJ,oBAAIC,UAAU,8BAChB,oCAEE,mBAAGA,UAAU,aAAb,2CAEF,iCAEE,mBAAGA,UAAU,aAAb,+CAEF,gCAEE,mBAAGA,UAAU,aAAb,wEAGA,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,UADR,UAGA,mBAAQ,CACN,GAAM,UADR,UAGA,cAAC,IAAD,CAAUC,SAAU,mCAAoCN,QAAQ,aAChE,mBAAQ,CACN,GAAM,iBADR,kBAGA,cAAC,IAAD,CAAUM,SAAUC,IAAgBP,QAAQ,aAC5C,mBAAQ,CACN,GAAM,YADR,YAGA,cAAC,IAAD,CAAUM,SAAU,mCAAoCN,QAAQ,aAChE,cAAC,IAAD,CAAUM,SAAU,gCAAiCN,QAAQ,aAC7D,mBAAQ,CACN,GAAM,SADR,SAGA,mBAAQ,CACN,GAAM,cADR,cAGA,cAAC,IAAD,CAAUM,SAAUE,IAAiBR,QAAQ,aAC7C,mBAAQ,CACN,GAAM,sBADR,sBAGA,cAAC,IAAD,CAAUM,SAAUG,IAAkBT,QAAQ,aAC9C,mBAAQ,CACN,GAAM,SADR,SAGA,mBAAQ,CACN,GAAM,YADR,UAGA,cAAC,IAAD,CAAUM,SAAU,gCAAiCN,QAAQ,aAC7D,mBAAQ,CACN,GAAM,SADR,SAGA,cAAC,IAAD,CAAUM,SAAU,kDAAmDN,QAAQ,aAC/E,mBAAQ,CACN,GAAM,oBADR,oBAGA,8BACA,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAcU,SAAUX,EAAMY,KAAKD,SAAUV,QAAQ,kBAMzDH,EAAWe,gBAAiB","file":"component---src-pages-components-rating-mdx-82e347db271dd0ae959d.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/stb_rating-structure@2x-6ff1e11177f204063574d619facde3a9.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_rating-structure-85f0ac8072a89214be9e577cb222a5c9.jpg\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport selectedRating from 'src/examples/Rating/selected';\nimport withLabelRating from 'src/examples/Rating/withLabel';\nimport withNumberRating from 'src/examples/Rating/withNumber';\nexport const query = graphql`\n  query RatingQuery {\n    metadata: componentMetadata(displayName: { eq: \"Rating\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"rating\"\n    }}>{`Rating`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Ratings are used to collect feedback from users. The stars in the component indicate a performance rating from one to five.`}</p>\n    <img src={require('src/assets/structure/stb_rating-structure.jpg')} srcSet={`${require('src/assets/structure/stb_rating-structure@2x.jpg')} 2x`} alt=\"Rating structure\" />\n    <ol className=\"u-textGray u-marginTopTiny\">\n  <li>\n    Container\n    <i className=\"u-text200\"> - Indicates the normal unrated state.</i>\n  </li>\n  <li>\n    Rating\n    <i className=\"u-text200\"> - Indicates the actual rating of an user.</i>\n  </li>\n  <li>\n    Label\n    <i className=\"u-text200\"> - Additional and descriptive information (i.e. ratings in number)</i>\n  </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h3>\n    <h4 {...{\n      \"id\": \"normal\"\n    }}>{`Normal`}</h4>\n    <CodeView codeText={'<Rating value={null} readOnly />'} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"hoverselected\"\n    }}>{`Hover/Selected`}</h4>\n    <CodeView codeText={selectedRating} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h4>\n    <CodeView codeText={'<Rating value={null} disabled />'} mdxType=\"CodeView\" />\n    <CodeView codeText={'<Rating value={3} disabled />'} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h3>\n    <h4 {...{\n      \"id\": \"with-label\"\n    }}>{`With label`}</h4>\n    <CodeView codeText={withLabelRating} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"with-rating-number\"\n    }}>{`With rating number`}</h4>\n    <CodeView codeText={withNumberRating} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <h4 {...{\n      \"id\": \"normal-1\"\n    }}>{`Normal`}</h4>\n    <CodeView codeText={'<Rating value={3} readOnly />'} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"small\"\n    }}>{`Small`}</h4>\n    <CodeView codeText={'<Rating value={3} size=\"extraSmall\" readOnly />'} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`N/A`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.metadata} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}