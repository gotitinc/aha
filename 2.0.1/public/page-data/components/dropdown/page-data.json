{"componentChunkName":"component---src-pages-components-dropdown-mdx","path":"/components/dropdown/","result":{"data":{"Dropdown":{"displayName":"Dropdown","composes":null,"description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"as","doclets":[{"tag":"default","value":"div"}],"defaultValue":{"value":"div","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"drop","doclets":[{"tag":"default","value":"'down'"}],"defaultValue":{"value":"'down'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Determines the direction and location of the Menu in relation to it's Toggle.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'up'","computed":false},{"value":"'down'","computed":false},{"value":"'left'","computed":false},{"value":"'right'","computed":false}],"raw":null}},{"name":"flip","doclets":[{"tag":"default","value":"true"}],"defaultValue":{"value":"true","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\nPopper.js's flip <a href=\"https://popper.js.org/popper-documentation.html#modifiers..flip.enabled\" target=\"_blank\" rel=\"noopener noreferrer\">docs</a>.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"show","doclets":[{"tag":"controllable","value":"onToggle"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Whether or not the Dropdown is visible.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"alignRight","doclets":[{"tag":"default","value":"false"}],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Align the menu to the right side of the Dropdown toggle</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"onToggle","doclets":[{"tag":"controllable","value":"show"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A callback fired when the Dropdown wishes to change visibility. Called with the requested\n<code class=\"language-text\">show</code> value, the DOM event, and the source that fired it: <code class=\"language-text\">&#39;click&#39;</code>,<code class=\"language-text\">&#39;keydown&#39;</code>,<code class=\"language-text\">&#39;rootClose&#39;</code>, or <code class=\"language-text\">&#39;select&#39;</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>\n  isOpen<span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">,</span>\n  event<span class=\"token operator\">:</span> SyntheticEvent<span class=\"token punctuation\">,</span>\n  metadata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    source<span class=\"token operator\">:</span> <span class=\"token string\">'select'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'click'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'rootClose'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'keydown'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span></code></pre></div>"}},"required":false,"type":{"name":"func","value":null,"raw":null}}]},"DropdownButton":{"displayName":"DropdownButton","composes":null,"description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"as","doclets":[],"defaultValue":{"value":"Button","computed":true},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"caret","doclets":[{"tag":"default","value":"'extraSmall'"}],"defaultValue":{"value":"'extraSmall'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Define size of caret icon</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"DropdownToggle":{"displayName":"DropdownToggle","composes":null,"description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"as","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Set a custom element for this component</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"children","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Children prop should only contain a single child, and  is enforced as such</p>"}},"required":true,"type":{"name":"element","value":null,"raw":null}}]},"DropdownContainer":{"displayName":"DropdownContainer","composes":null,"description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"as","doclets":[{"tag":"default","value":"div"}],"defaultValue":{"value":"div","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"popperConfig","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A set of popper options and props passed directly to react-popper's Popper component.</p>"}},"required":false,"type":{"name":"object","value":null,"raw":null}},{"name":"transition","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A <code class=\"language-text\">react-transition-group</code> Transition component used to animate the Message on dismissal.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}},{"name":"additionalStyles","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Custom style</p>"}},"required":false,"type":{"name":"object","value":null,"raw":null}}]}},"pageContext":{"frontmatter":{"title":"Dropdown"}}},"staticQueryHashes":["2468095761","3167400025"]}