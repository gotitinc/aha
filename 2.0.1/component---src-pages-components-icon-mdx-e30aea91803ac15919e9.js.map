{"version":3,"sources":["webpack:///./src/pages/components/icon.mdx","webpack:///./src/assets/structure/stb_icon-grid.jpg","webpack:///./src/assets/structure/stb_icon-shapes.jpg","webpack:///./src/assets/structure/stb_icon-grid@2x.jpg","webpack:///./src/assets/structure/stb_icon-shapes@2x.jpg"],"names":["AllIcons","useState","iconDisplay","setIconDisplay","searchText","setSearchText","Group","controlId","sizeControl","Input","value","onChange","e","target","toLowerCase","placeholder","horizontal","show","codeText","mdxType","className","Object","keys","icons","filter","item","includes","map","onClick","key","classNames","Trigger","placement","delay","hide","hoverOverlay","overlay","props","id","name","size","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","src","require","srcSet","alt","parentName","colorIcon","sizeIcon","metadata","data","isMDXComponent","module","exports"],"mappings":"kZAkBaA,EAAW,WAAM,MACUC,mBAAS,MAAxCC,EADqB,KACRC,EADQ,OAEQF,mBAAS,IAAtCG,EAFqB,KAETC,EAFS,KAU5B,OAAO,8BACH,cAAC,OAAKC,MAAN,CAAYC,UAAU,cAAcC,YAAY,SAC9C,cAAC,OAAKC,MAAN,CAAYC,MAAON,EAAYO,SARhB,SAAAC,GACnB,IAAMF,EAAQE,EAAEC,OAAOH,MACvBP,EAAe,MACfE,EAAcK,EAAMI,gBAKuCC,YAAY,qBAErEb,GAAe,cAAC,IAAD,CAAUc,YAAU,EAACC,MAAI,EAACC,SAAQ,6BAA+BhB,EAA/B,MAAiDiB,QAAQ,aAC1G,qBAAKC,UAAU,wHACZC,OAAOC,KAAKC,KAAOC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,SAAStB,MAAauB,KAAI,SAAAF,GAAI,OAAI,qBAAKG,QAAS,kBAAMzB,EAAesB,IAAOI,IAAKJ,EAAML,UAAWU,IAAW,uEAAwE5B,IAAgBuB,GAAQ,kBACnP,cAAC,UAAQM,QAAT,CAAiBC,UAAU,SAASC,MAAO,CAC3ChB,KAAM,IACNiB,KAAM,KACLC,cAAY,EAACC,QAAS,SAAAC,GAAK,OAAI,cAAC,UAAD,eAASC,GAAG,uBAA0BD,EAAtC,CAA6ClB,QAAQ,YAC5EM,KAEL,cAAC,OAAD,CAAMc,KAAMd,EAAMe,KAAK,SAASrB,QAAQ,iBAczCsB,EAAe,GACtBC,EAAc,CAClB1C,WACA2C,MAXmB,aAYnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGV,EACF,8BACD,OAAO,cAACO,EAAD,iBAAeF,EAAiBL,EAAhC,CAAuCU,WAAYA,EAAY5B,QAAQ,cAK5E,mBAAQ,CACN,GAAM,SADR,SAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,yLACA,mBAAQ,CACN,GAAM,aADR,aAGA,sGACA,qBAAKC,UAAU,iBAAiB4B,IAAKC,EAAQ,QAA2CC,OAAWD,EAAQ,QAAb,MAAgEE,IAAI,cAClK,oBAAI/B,UAAU,iDAChB,qCAEE,mBAAGA,UAAU,aAAb,gCAEF,mCAEE,mBAAGA,UAAU,aAAb,4CAEF,qCAEE,mBAAGA,UAAU,aAAb,wDAGA,mBAAQ,CACN,GAAM,UADR,UAGA,qBAAKA,UAAU,4BACjB,qBAAKA,UAAU,cACb,qBAAKA,UAAU,iBAAiB4B,IAAKC,EAAQ,QAA6CC,OAAWD,EAAQ,QAAb,MAAkEE,IAAI,cACtK,qBAAK/B,UAAU,4DACb,sBAAMA,UAAU,cAAhB,UACA,sBAAMA,UAAU,cAAhB,UACA,sBAAMA,UAAU,cAAhB,wBACA,sBAAMA,UAAU,cAAhB,yBAIF,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,OADR,OAGA,cAACpB,EAAD,CAAUmB,QAAQ,aAClB,mBAAQ,CACN,GAAM,UADR,UAGA,kFAA+D,4BAAYiC,WAAW,KAAvB,kBAA/D,KAA+H,4BAAYA,WAAW,KAAvB,iBAC/H,cAAC,IAAD,CAAUlC,SAAUmC,IAAWlC,QAAQ,aACvC,mBAAQ,CACN,GAAM,SADR,SAGA,iEACA,cAAC,IAAD,CAAUD,SAAUoC,IAAUnC,QAAQ,aACtC,mBAAQ,CACN,GAAM,oBADR,oBAGA,8BACA,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAcoC,SAAUlB,EAAMmB,KAAKD,SAAUpC,QAAQ,kBAMzD2B,EAAWW,gBAAiB,G,uBC7I5BC,EAAOC,QAAU,IAA0B,6D,qBCA3CD,EAAOC,QAAU,IAA0B,+D,qBCA3CD,EAAOC,QAAU,IAA0B,gE,qBCA3CD,EAAOC,QAAU,IAA0B","file":"component---src-pages-components-icon-mdx-e30aea91803ac15919e9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport { useState } from 'react';\nimport classNames from 'classnames';\nimport copy from 'copy-text-to-clipboard';\nimport { Icon, Form, Overlay, Tooltip } from '@ahaui/react';\nimport { icons } from '@ahaui/react/constants/icons';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport colorIcon from 'src/examples/Icon/color';\nimport sizeIcon from 'src/examples/Icon/size';\nexport const AllIcons = () => {\n  const [iconDisplay, setIconDisplay] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleSearch = e => {\n    const value = e.target.value;\n    setIconDisplay(null);\n    setSearchText(value.toLowerCase());\n  };\n\n  return <>\n      <Form.Group controlId=\"search-icon\" sizeControl=\"small\">\n        <Form.Input value={searchText} onChange={handleSearch} placeholder=\"Search icon ...\" />\n      </Form.Group>\n     {iconDisplay && <CodeView horizontal show codeText={`<Icon size=\"medium\" name=\"${iconDisplay}\"/>`} mdxType=\"CodeView\" />}\n      <div className=\"u-positionRelative u-paddingSmall u-marginBottomExtraSmall u-border u-borderSmall u-borderUltraLight u-roundedMedium\">\n        {Object.keys(icons).filter(item => item.includes(searchText)).map(item => <div onClick={() => setIconDisplay(item)} key={item} className={classNames('u-marginRightSmall u-marginBottomSmall u-cursorPointer u-inlineBlock', iconDisplay === item && 'u-textPrimary')}>\n          <Overlay.Trigger placement=\"bottom\" delay={{\n          show: 500,\n          hide: 1000\n        }} hoverOverlay overlay={props => <Tooltip id=\"tooltip-icon-search\" {...props} mdxType=\"Tooltip\">\n                  {item}\n              </Tooltip>}>\n              <Icon name={item} size=\"medium\" mdxType=\"Icon\" />\n            </Overlay.Trigger>\n          </div>)}\n      </div>\n    </>;\n};\nexport const query = graphql`\n  query IconQuery {\n    metadata: componentMetadata(displayName: { eq: \"Icon\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  AllIcons,\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"icons\"\n    }}>{`Icons`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Icons are used to visualize the common actions, provide visual context and enhance usability. They should be simple, yet bold enough to grab users' attention.`}</p>\n    <h3 {...{\n      \"id\": \"icon-grid\"\n    }}>{`Icon grid`}</h3>\n    <p>{`Regular icons are designed on an 18px grid and exported on a 24px artboard.`}</p>\n    <img className=\"u-maxWidthFull\" src={require('src/assets/structure/stb_icon-grid.jpg')} srcSet={`${require('src/assets/structure/stb_icon-grid@2x.jpg')} 2x`} alt=\"Icon grid\" />\n    <ol className=\"u-paddingLeftLarge u-textGray u-marginTopTiny\">\n  <li>\n    Container&nbsp;\n    <i className=\"u-text200\">- The exported icon canvas.</i>\n  </li>\n  <li>\n    Padding&nbsp;\n    <i className=\"u-text200\">The white space around the actual icon.</i>\n  </li>\n  <li>\n    Safe area&nbsp;\n    <i className=\"u-text200\">The area which is used to display the actual icon.</i>\n  </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"shapes\"\n    }}>{`Shapes`}</h3>\n    <div className=\"Grid u-marginBottomSmall\">\n  <div className=\"u-size1of1\">\n    <img className=\"u-maxWidthFull\" src={require('src/assets/structure/stb_icon-shapes.jpg')} srcSet={`${require('src/assets/structure/stb_icon-shapes@2x.jpg')} 2x`} alt=\"Icon grid\" />\n    <div className=\"u-flex u-textGray u-text200 u-marginTopTiny u-textCenter\">\n      <span className=\"u-sizeFill\">Square</span>\n      <span className=\"u-sizeFill\">Circle</span>\n      <span className=\"u-sizeFill\">Horizontal rectangle</span>\n      <span className=\"u-sizeFill\">Vertical rectangle</span>\n    </div>\n  </div>\n    </div>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"all\"\n    }}>{`All`}</h3>\n    <AllIcons mdxType=\"AllIcons\" />\n    <h3 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h3>\n    <p>{`Icons share the same colors set as text colors, such as `}<inlineCode parentName=\"p\">{`.u-textPrimary`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`.u-textWhite`}</inlineCode></p>\n    <CodeView codeText={colorIcon} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <p>{`Currently, there are 6 sizes of icons.`}</p>\n    <CodeView codeText={sizeIcon} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`N/A`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.metadata} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/stb_icon-grid-72079088fc95a25f0e82e41098d61b33.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_icon-shapes-7a9573345d951871f32074c8ba6d200d.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_icon-grid@2x-e9def1abf8c9bfe9382c2046a185439e.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_icon-shapes@2x-a9209659e169e6d42b40f480d89892ff.jpg\";"],"sourceRoot":""}