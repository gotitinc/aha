{"version":3,"sources":["webpack:///./src/assets/structure/stb_multi-steps-structure@2x.jpg","webpack:///./src/assets/structure/stb_multi-steps-structure.jpg","webpack:///./src/pages/components/multi-steps.mdx"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","require","srcSet","className","alt","codeText","horizontalMultiSteps","verticalMultiSteps","whiteMultiSteps","exampleClassName","primaryMultiSteps","accentMultiSteps","warningMultiSteps","positiveMultiSteps","negativeMultiSteps","metadata","data","MultiSteps","MultiStepsItem","exportedBy","isMDXComponent"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,4E,uBCA3CD,EAAOC,QAAU,IAA0B,yE,oXC6B9BC,EAAe,GACtBC,EAAc,CAClBC,MAZmB,YAanBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,eADR,eAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,8HACA,qBAAKC,IAAKC,EAAQ,QAAuDC,OAAWD,EAAQ,QAAb,MAA4EE,UAAU,iBAAiBC,IAAI,eAC1L,oBAAID,UAAU,8BAChB,+BAEE,mBAAGA,UAAU,aAAb,yDAEF,gCAEE,sBAAMA,UAAU,8BAAhB,cAFF,IAIE,mBAAGA,UAAU,aAAb,2DAEF,uCAEE,mBAAGA,UAAU,aAAb,qDAEF,oCAEE,mBAAGA,UAAU,aAAb,+CAGA,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,aADR,aAGA,mBAAQ,CACN,GAAM,cADR,cAGA,cAAC,IAAD,CAAUE,SAAUC,IAAsBP,QAAQ,aAClD,mBAAQ,CACN,GAAM,YADR,YAGA,cAAC,IAAD,CAAUM,SAAUE,IAAoBR,QAAQ,aAChD,mBAAQ,CACN,GAAM,UADR,UAGA,mBAAQ,CACN,GAAM,QADR,QAGA,2DACA,cAAC,IAAD,CAAUM,SAAUG,IAAiBC,iBAAiB,mBAAmBV,QAAQ,aACjF,mBAAQ,CACN,GAAM,SADR,SAGA,4DACA,cAAC,IAAD,CAAUM,SAAUK,IAAmBX,QAAQ,aAC/C,cAAC,IAAD,CAAUM,SAAUM,IAAkBZ,QAAQ,aAC9C,cAAC,IAAD,CAAUM,SAAUO,IAAmBb,QAAQ,aAC/C,cAAC,IAAD,CAAUM,SAAUQ,IAAoBd,QAAQ,aAChD,cAAC,IAAD,CAAUM,SAAUS,IAAoBf,QAAQ,aAChD,mBAAQ,CACN,GAAM,oBADR,oBAGA,8BACA,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAcgB,SAAUjB,EAAMkB,KAAKC,WAAYlB,QAAQ,iBACvD,cAAC,IAAD,CAAcgB,SAAUjB,EAAMkB,KAAKE,eAAgBC,WAAYrB,EAAMkB,KAAKC,WAAYlB,QAAQ,kBAMlGH,EAAWwB,gBAAiB","file":"component---src-pages-components-multi-steps-mdx-0e26679fd7dedab2209a.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/stb_multi-steps-structure@2x-acc1f7b4c21270ae0e53b02681f23541.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_multi-steps-structure-1248c4fa9c9f14ad7a2a66307a0ada73.jpg\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport horizontalMultiSteps from 'src/examples/MultiSteps/horizontal';\nimport verticalMultiSteps from 'src/examples/MultiSteps/vertical';\nimport whiteMultiSteps from 'src/examples/MultiSteps/white';\nimport primaryMultiSteps from 'src/examples/MultiSteps/primary';\nimport accentMultiSteps from 'src/examples/MultiSteps/accent';\nimport warningMultiSteps from 'src/examples/MultiSteps/warning';\nimport positiveMultiSteps from 'src/examples/MultiSteps/positive';\nimport negativeMultiSteps from 'src/examples/MultiSteps/negative';\nexport const query = graphql`\n  query MultiStepsMDXQuery {\n    MultiSteps: componentMetadata(displayName: { eq: \"MultiSteps\" }) {\n      ...ComponentApi_metadata\n    }\n    MultiStepsItem: componentMetadata(displayName: { eq: \"MultiStepsItem\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"multi-steps\"\n    }}>{`Multi Steps`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`The component is used when a progress needs to be divided into multiple logical and numbered steps.`}</p>\n    <img src={require('src/assets/structure/stb_multi-steps-structure.jpg')} srcSet={`${require('src/assets/structure/stb_multi-steps-structure@2x.jpg')} 2x`} className=\"u-maxWidthFull\" alt=\"MultiSteps\" />\n    <ol className=\"u-textGray u-marginTopTiny\">\n  <li>\n      Step\n    <i className=\"u-text200\"> - Display step number or current state of the step.</i>\n  </li>\n  <li>\n      Label\n    <span className=\"u-marginLeftTiny u-text200\">(optional)</span>\n    &nbsp;\n    <i className=\"u-text200\"> - Display short & descriptive name/title of the step.</i>\n  </li>\n  <li>\n      Progress bar\n    <i className=\"u-text200\"> - Indicate the current progress of the process.</i>\n  </li>\n  <li>\n      Substrate\n    <i className=\"u-text200\"> -  Indicate the full achievable process.</i>\n  </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"direction\"\n    }}>{`Direction`}</h3>\n    <h4 {...{\n      \"id\": \"horizontal\"\n    }}>{`Horizontal`}</h4>\n    <CodeView codeText={horizontalMultiSteps} mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"vertical\"\n    }}>{`Vertical`}</h4>\n    <CodeView codeText={verticalMultiSteps} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"styles\"\n    }}>{`Styles`}</h3>\n    <h4 {...{\n      \"id\": \"dark\"\n    }}>{`Dark`}</h4>\n    <p>{`Used on a dark color background.`}</p>\n    <CodeView codeText={whiteMultiSteps} exampleClassName=\"u-backgroundDark\" mdxType=\"CodeView\" />\n    <h4 {...{\n      \"id\": \"light\"\n    }}>{`Light`}</h4>\n    <p>{`Used on a light color background.`}</p>\n    <CodeView codeText={primaryMultiSteps} mdxType=\"CodeView\" />\n    <CodeView codeText={accentMultiSteps} mdxType=\"CodeView\" />\n    <CodeView codeText={warningMultiSteps} mdxType=\"CodeView\" />\n    <CodeView codeText={positiveMultiSteps} mdxType=\"CodeView\" />\n    <CodeView codeText={negativeMultiSteps} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`N/A`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.MultiSteps} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.MultiStepsItem} exportedBy={props.data.MultiSteps} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}