{"version":3,"sources":["webpack:///./src/assets/structure/stb_tag-input-structure.jpg","webpack:///./src/assets/structure/stb_tag-input-structure@2x.jpg","webpack:///./src/pages/components/tag-input.mdx"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","require","srcSet","className","alt","codeText","defaultTagInput","variant1TagInput","variant2TagInput","widthButtonTagInput","widthButton2TagInput","metadata","data","isMDXComponent"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,uE,qBCA3CD,EAAOC,QAAU,IAA0B,0E,mTCuB9BC,EAAe,GACtBC,EAAc,CAClBC,MATmB,aAUnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeF,EAAiBM,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,mBAAQ,CACN,GAAM,aADR,aAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,wGACA,qDAAkC,iCAAGC,WAAW,KAAQ,CACpD,KAAQ,kDADsB,oBAGlC,qBAAKC,IAAKC,EAAQ,QAAqDC,OAAWD,EAAQ,QAAb,MAA0EE,UAAU,iBAAiBC,IAAI,cACtL,oBAAID,UAAU,8BAChB,0CAEE,mBAAGA,UAAU,aAAb,wGAEF,sCAEE,mBAAGA,UAAU,aAAb,gPAEF,+BAEE,mBAAGA,UAAU,aAAb,gFAEF,iCAEE,mBAAGA,UAAU,aAAb,uJAGA,mBAAQ,CACN,GAAM,YADR,YAGA,mBAAQ,CACN,GAAM,YADR,YAGA,oCAAiB,4BAAYJ,WAAW,KAAvB,kBAAjB,+EACA,cAAC,IAAD,CAAUM,SAAUC,IAAiBR,QAAQ,aAC7C,cAAC,IAAD,CAAUO,SAAUE,IAAkBT,QAAQ,aAC9C,cAAC,IAAD,CAAUO,SAAUG,IAAkBV,QAAQ,aAC9C,mBAAQ,CACN,GAAM,eADR,eAGA,cAAC,IAAD,CAAUO,SAAUI,IAAqBX,QAAQ,aACjD,cAAC,IAAD,CAAUO,SAAUK,IAAsBZ,QAAQ,aAClD,mBAAQ,CACN,GAAM,oBADR,oBAGA,8BACA,mBAAQ,CACN,GAAM,OADR,OAGA,cAAC,IAAD,CAAca,SAAUd,EAAMe,KAAKD,SAAUb,QAAQ,kBAMzDH,EAAWkB,gBAAiB","file":"component---src-pages-components-tag-input-mdx-051f3ac49102eb0e5ecd.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/stb_tag-input-structure-92601cfcf9fb033c0fbd44829aa3bafa.jpg\";","module.exports = __webpack_public_path__ + \"static/stb_tag-input-structure@2x-8b485f85d1bdb3d84ac9e1754b461caf.jpg\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/uendno/source-code/gotit/aha/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from 'src/components/ComponentApi';\nimport CodeView from 'src/components/CodeView';\nimport defaultTagInput from 'src/examples/TagInput/default';\nimport variant1TagInput from 'src/examples/TagInput/variant-1';\nimport variant2TagInput from 'src/examples/TagInput/variant-2';\nimport widthButtonTagInput from 'src/examples/TagInput/widthButton';\nimport widthButton2TagInput from 'src/examples/TagInput/widthButton-2';\nexport const query = graphql`\n  query TagInputQuery {\n    metadata: componentMetadata(displayName: { eq: \"TagInput\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"tag-input\"\n    }}>{`Tag Input`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Tag input component allows users enter one or several tags to an input field.`}</p>\n    <p>{`This component is based on `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/react-tagsinput\"\n      }}>{`react-tagsinput`}</a></p>\n    <img src={require('src/assets/structure/stb_tag-input-structure.jpg')} srcSet={`${require('src/assets/structure/stb_tag-input-structure@2x.jpg')} 2x`} className=\"u-maxWidthFull\" alt=\"Tag Input\" />\n    <ol className=\"u-textGray u-marginTopTiny\">\n  <li>\n    Tag-Input field\n    <i className=\"u-text200\"> - Be set single line as default, but it can be expand to several lines when users input more tags.</i>\n  </li>\n  <li>\n    Placeholder\n    <i className=\"u-text200\"> - The placeholder attribute specifies a short hint that describes the expected value of an input field (e.g. Add a tag). The short hint is displayed in the input field before users typing a value and comebacks when a tag was selected.</i>\n  </li>\n  <li>\n    Tags\n    <i className=\"u-text200\"> - The main values of the field, with removable tags allow users to remove.</i>\n  </li>\n  <li>\n    Button\n    <i className=\"u-text200\"> - A button is separated from the field as default. In some cases, the button can be put next to the field, on the right side, as the form group.</i>\n  </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <p>{`The value `}<inlineCode parentName=\"p\">{`primary_subtle`}</inlineCode>{` is used as the default style, but there are also many other styles to use.`}</p>\n    <CodeView codeText={defaultTagInput} mdxType=\"CodeView\" />\n    <CodeView codeText={variant1TagInput} mdxType=\"CodeView\" />\n    <CodeView codeText={variant2TagInput} mdxType=\"CodeView\" />\n    <h3 {...{\n      \"id\": \"with-button\"\n    }}>{`With button`}</h3>\n    <CodeView codeText={widthButtonTagInput} mdxType=\"CodeView\" />\n    <CodeView codeText={widthButton2TagInput} mdxType=\"CodeView\" />\n    <h2 {...{\n      \"id\": \"design-reference\"\n    }}>{`Design Reference`}</h2>\n    <p>{`N/A`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.metadata} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}